function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["_astro/index.DiqjVb9C.js","_astro/index.CeiqHT1a.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
const P="modulepreload",T=function(e){return"/"+e},b={},O=function(t,r,i){let a=Promise.resolve();if(r&&r.length>0){const n=document.getElementsByTagName("link"),s=document.querySelector("meta[property=csp-nonce]"),o=s?.nonce||s?.getAttribute("nonce");a=Promise.all(r.map(h=>{if(h=T(h),h in b)return;b[h]=!0;const l=h.endsWith(".css"),p=l?'[rel="stylesheet"]':"";if(!!i)for(let g=n.length-1;g>=0;g--){const m=n[g];if(m.href===h&&(!l||m.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${h}"]${p}`))return;const c=document.createElement("link");if(c.rel=l?"stylesheet":P,l||(c.as="script",c.crossOrigin=""),c.href=h,o&&c.setAttribute("nonce",o),document.head.appendChild(c),l)return new Promise((g,m)=>{c.addEventListener("load",g),c.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${h}`)))})}))}return a.then(()=>t()).catch(n=>{const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=n,window.dispatchEvent(s),!s.defaultPrevented)throw n})},ee={name:"InvalidComponentArgs",title:"Invalid component arguments.",message:e=>`Invalid arguments passed to${e?` <${e}>`:""} component.`,hint:"Astro components cannot be rendered directly via function call, such as `Component()` or `{items.map(Component)}`."},te={name:"ImageMissingAlt",title:'Image missing required "alt" property.',message:'Image missing "alt" property. "alt" text is required to describe important images on the page.',hint:'Use an empty string ("") for decorative images.'},re={name:"InvalidImageService",title:"Error while loading image service.",message:"There was an error loading the configured image service. Please see the stack trace for more information."},v={name:"MissingImageDimension",title:"Missing image dimensions",message:(e,t)=>`Missing ${e==="both"?"width and height attributes":`${e} attribute`} for ${t}. When using remote images, both dimensions are required unless in order to avoid CLS.`,hint:"If your image is inside your `src` folder, you probably meant to import it instead. See [the Imports guide for more information](https://docs.astro.build/en/guides/imports/#other-assets). You can also use `inferSize={true}` for remote images to get the original dimensions."},ie={name:"FailedToFetchRemoteImageDimensions",title:"Failed to retrieve remote image dimensions",message:e=>`Failed to get the dimensions for ${e}.`,hint:"Verify your remote image URL is accurate, and that you are not using `inferSize` with a file located in your `public/` folder."},S={name:"UnsupportedImageFormat",title:"Unsupported image format",message:(e,t,r)=>`Received unsupported format \`${e}\` from \`${t}\`. Currently only ${r.join(", ")} are supported by our image services.`,hint:"Using an `img` tag directly instead of the `Image` component might be what you're looking for."},F={name:"UnsupportedImageConversion",title:"Unsupported image conversion",message:"Converting between vector (such as SVGs) and raster (such as PNGs and JPEGs) images is not currently supported."},I={name:"ExpectedImage",title:"Expected src to be an image.",message:(e,t,r)=>`Expected \`src\` property for \`getImage\` or \`<Image />\` to be either an ESM imported image or a string with the path of a remote image. Received \`${e}\` (type: \`${t}\`).

Full serialized options received: \`${r}\`.`,hint:"This error can often happen because of a wrong path. Make sure the path to your image is correct. If you're passing an async function, make sure to call and await it."},se={name:"ExpectedImageOptions",title:"Expected image options.",message:e=>`Expected getImage() parameter to be an object. Received \`${e}\`.`},x={name:"IncompatibleDescriptorOptions",title:"Cannot set both `densities` and `widths`",message:"Only one of `densities` or `widths` can be specified. In most cases, you'll probably want to use only `widths` if you require specific widths.",hint:"Those attributes are used to construct a `srcset` attribute, which cannot have both `x` and `w` descriptors."},E={name:"LocalImageUsedWrongly",title:"Local images must be imported.",message:e=>`\`Image\`'s and \`getImage\`'s \`src\` parameter must be an imported image or an URL, it cannot be a string filepath. Received \`${e}\`.`,hint:"If you want to use an image from your `src` folder, you need to either import it or if the image is coming from a content collection, use the [image() schema helper](https://docs.astro.build/en/guides/images/#images-in-content-collections). See https://docs.astro.build/en/guides/images/#src-required for more information on the `src` property."},ae={name:"AstroGlobUsedOutside",title:"Astro.glob() used outside of an Astro file.",message:e=>`\`Astro.glob(${e})\` can only be used in \`.astro\` files. \`import.meta.glob(${e})\` can be used instead to achieve a similar result.`,hint:"See Vite's documentation on `import.meta.glob` for more information: https://vitejs.dev/guide/features.html#glob-import"},ne={name:"AstroGlobNoMatch",title:"Astro.glob() did not match any files.",message:e=>`\`Astro.glob(${e})\` did not return any matching files.`,hint:"Check the pattern for typos."},_={name:"MissingSharp",title:"Could not find Sharp.",message:"Could not find Sharp. Please install Sharp (`sharp`) manually into your project or migrate to another image service.",hint:"See Sharp's installation instructions for more information: https://sharp.pixelplumbing.com/install. If you are not relying on `astro:assets` to optimize, transform, or process any images, you can configure a passthrough image service instead of installing Sharp. See https://docs.astro.build/en/reference/errors/missing-sharp for more information.\n\nSee https://docs.astro.build/en/guides/images/#default-image-service for more information on how to migrate to another image service."};function q(e){return e.replace(/\r\n|\r(?!\n)|\n/g,`
`)}function C(e,t){if(!t||t.line===void 0||t.column===void 0)return"";const r=q(e).split(`
`).map(s=>s.replace(/\t/g,"  ")),i=[];for(let s=-2;s<=2;s++)r[t.line+s]&&i.push(t.line+s);let a=0;for(const s of i){let o=`> ${s}`;o.length>a&&(a=o.length)}let n="";for(const s of i){const o=s===t.line-1;n+=o?"> ":"  ",n+=`${s+1} | ${r[s]}
`,o&&(n+=`${Array.from({length:a}).join(" ")}  | ${Array.from({length:t.column}).join(" ")}^
`)}return n}class f extends Error{loc;title;hint;frame;type="AstroError";constructor(t,r){const{name:i,title:a,message:n,stack:s,location:o,hint:h,frame:l}=t;super(n,r),this.title=a,this.name=i,n&&(this.message=n),this.stack=s||this.stack,this.loc=o,this.hint=h,this.frame=l}setLocation(t){this.loc=t}setName(t){this.name=t}setMessage(t){this.message=t}setHint(t){this.hint=t}setFrame(t,r){this.frame=C(t,r)}static is(t){return t.type==="AstroError"}}const A=["jpeg","jpg","png","tiff","webp","gif","svg","avif"],$="webp",j=["src","width","height","format","quality"];function k(e){return e.endsWith("/")?e.slice(0,e.length-1):e}function D(e){return e.startsWith("/")?e.substring(1):e}function N(e){return e.replace(/^\/|\/$/g,"")}function H(e){return typeof e=="string"||e instanceof String}function z(...e){return e.filter(H).map((t,r)=>r===0?k(t):r===e.length-1?D(t):N(t)).join("/")}function M(e){return/^(?:http|ftp|https|ws):?\/\//.test(e)||e.startsWith("data:")}function y(e){return typeof e=="object"}function oe(e){return typeof e=="string"}async function ce(e){return typeof e=="object"&&"then"in e?(await e).default??await e:e}function G(e,t){return B(e,t.protocol)&&R(e,t.hostname,!0)&&V(e,t.port)&&J(e,t.pathname,!0)}function V(e,t){return!t||t===e.port}function B(e,t){return!t||t===e.protocol.slice(0,-1)}function R(e,t,r){if(t){if(!r||!t.startsWith("*"))return t===e.hostname;if(t.startsWith("**.")){const i=t.slice(2);return i!==e.hostname&&e.hostname.endsWith(i)}else if(t.startsWith("*.")){const i=t.slice(1);return e.hostname.replace(i,"").split(".").filter(Boolean).length===1}}else return!0;return!1}function J(e,t,r){if(t){if(!r||!t.endsWith("*"))return t===e.pathname;if(t.endsWith("/**")){const i=t.slice(0,-2);return i!==e.pathname&&e.pathname.startsWith(i)}else if(t.endsWith("/*")){const i=t.slice(0,-1);return e.pathname.replace(i,"").split("/").filter(Boolean).length===1}}else return!0;return!1}function Q(e,{domains:t=[],remotePatterns:r=[]}){if(!M(e))return!1;const i=new URL(e);return t.some(a=>R(i,a))||r.some(a=>G(i,a))}function me(e){return e?"transform"in e:!1}function Y(e){let t=parseInt(e);return Number.isNaN(t)?e:t}const u={propertiesToHash:j,validateOptions(e){if(!e.src||typeof e.src!="string"&&typeof e.src!="object")throw new f({...I,message:I.message(JSON.stringify(e.src),typeof e.src,JSON.stringify(e,(t,r)=>r===void 0?null:r))});if(y(e.src)){if(!A.includes(e.src.format))throw new f({...S,message:S.message(e.src.format,e.src.src,A)});if(e.widths&&e.densities)throw new f(x);if(e.src.format==="svg"&&(e.format="svg"),e.src.format==="svg"&&e.format!=="svg"||e.src.format!=="svg"&&e.format==="svg")throw new f(F)}else{if(e.src.startsWith("/@fs/")||!M(e.src)&&!e.src.startsWith("/"))throw new f({...E,message:E.message(e.src)});let t;if(!e.width&&!e.height?t="both":!e.width&&e.height?t="width":e.width&&!e.height&&(t="height"),t)throw new f({...v,message:v.message(t,e.src)})}return e.format||(e.format=$),e.width&&(e.width=Math.round(e.width)),e.height&&(e.height=Math.round(e.height)),e},getHTMLAttributes(e){const{targetWidth:t,targetHeight:r}=W(e),{src:i,width:a,height:n,format:s,quality:o,densities:h,widths:l,formats:p,...d}=e;return{...d,width:t,height:r,loading:d.loading??"lazy",decoding:d.decoding??"async"}},getSrcSet(e){const t=[],{targetWidth:r}=W(e),{widths:i,densities:a}=e,n=e.format??$;let s=e.width,o=1/0;y(e.src)&&(s=e.src.width,o=s);const{width:h,height:l,...p}=e,d=[];if(a){const c=a.map(m=>typeof m=="number"?m:parseFloat(m)),g=c.sort().map(m=>Math.round(r*m));d.push(...g.map((m,U)=>({maxTargetWidth:Math.min(m,o),descriptor:`${c[U]}x`})))}else i&&d.push(...i.map(c=>({maxTargetWidth:Math.min(c,o),descriptor:`${c}w`})));for(const{maxTargetWidth:c,descriptor:g}of d){const m={...p};c!==s?m.width=c:e.width&&e.height&&(m.width=e.width,m.height=e.height),t.push({transform:m,descriptor:g,attributes:{type:`image/${n}`}})}return t},getURL(e,t){const r=new URLSearchParams;if(y(e.src))r.append("href",e.src.src);else if(Q(e.src,t))r.append("href",e.src);else return e.src;return Object.entries({w:"width",h:"height",q:"quality",f:"format"}).forEach(([n,s])=>{e[s]&&r.append(n,e[s].toString())}),`${z("/","/_image")}?${r}`},parseURL(e){const t=e.searchParams;return t.has("href")?{src:t.get("href"),width:t.has("w")?parseInt(t.get("w")):void 0,height:t.has("h")?parseInt(t.get("h")):void 0,format:t.get("f"),quality:t.get("q")}:void 0}};function W(e){let t=e.width,r=e.height;if(y(e.src)){const i=e.src.width/e.src.height;r&&!t?t=Math.round(r*i):t&&!r?r=Math.round(t/i):!t&&!r&&(t=e.src.width,r=e.src.height)}return{targetWidth:t,targetHeight:r}}let w;const L={low:25,mid:50,high:80,max:100};async function K(){let e;try{e=(await O(()=>import("../index.DiqjVb9C.js").then(t=>t.i),__vite__mapDeps([0,1]))).default}catch{throw new f(_)}return e}const X={validateOptions:u.validateOptions,getURL:u.getURL,parseURL:u.parseURL,getHTMLAttributes:u.getHTMLAttributes,getSrcSet:u.getSrcSet,async transform(e,t,r){w||(w=await K());const i=t;if(i.format==="svg")return{data:e,format:"svg"};const a=w(e,{failOnError:!1,pages:-1,limitInputPixels:r.service.config.limitInputPixels});if(a.rotate(),i.height&&!i.width?a.resize({height:Math.round(i.height)}):i.width&&a.resize({width:Math.round(i.width)}),i.format){let o;if(i.quality){const h=Y(i.quality);typeof h=="number"?o=h:o=i.quality in L?L[i.quality]:void 0}a.toFormat(i.format,{quality:o})}const{data:n,info:s}=await a.toBuffer({resolveWithObject:!0});return{data:n,format:s.format}}};var Z=X;const he=Object.freeze(Object.defineProperty({__proto__:null,default:Z},Symbol.toStringTag,{value:"Module"}));export{f as A,j as D,se as E,ie as F,re as I,O as _,I as a,y as b,me as c,ee as d,ae as e,ne as f,te as g,oe as i,ce as r,he as s};
